/****************************************************************************
**
** Copyright (C) 2021 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt for Multimedia module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 3 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL3 included in the
** packaging of this file. Please review the following information to
** ensure the GNU Lesser General Public License version 3 requirements
** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 2.0 or (at your option) the GNU General
** Public license version 3 or any later version approved by the KDE Free
** Qt Foundation. The licenses are as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-2.0.html and
** https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/



/*!
\page multimediaoverview.html
\title Multimedia Overview
\brief A set of APIs for working with audio, video and camera devices.

Multimedia support in Qt is provided by the \l{Qt Multimedia} module. The Qt
Multimedia module provides a rich feature set that enables you to easily take
advantage of a platform's multimedia capabilities, such as media playback and
the use of camera devices.

\section1 Features

Here are some things you can do with the Qt Multimedia APIs:

\list
\li Access raw audio devices for input and output.
\li Play low latency sound effects.
\li Play media files in playlists (such as compressed audio or video files).
\li Record audio and compress it.
\li Use a camera, including viewfinder, image capture, and movie recording
\li Decode audio media files into memory for processing.
\endlist

\section1 Multimedia Components

The Qt Multimedia APIs are categorized into three main components. More
information specific to each component is available in the overview pages. You
can also take a look at some \l{Multimedia Recipes}{recipes}.

\list
\li \l {Audio Overview}
\li \l {Video Overview}
\li \l {Camera Overview}
\endlist

\section1 Multimedia Recipes

For some quick recipes, see this table:

\table 70%
    \header
        \li Use case
        \li Examples
        \li QML Types
        \li C++ Classes
    \row
        \li Playing a sound effect
        \li
        \li
        \li QSoundEffect
    \row
        \li Playing low latency audio
        \li \l{Audio Input Example}{audioinput},
            \l{Spectrum Example}{spectrum}
        \li
        \li QAudioSink
    \row
        \li Playing encoded audio (MP3, AAC etc)
        \li \l{Media Player Example}{player}
        \li \l Audio, \l {MediaPlayer}
        \li QMediaPlayer
    \row
        \li Accessing raw audio input data
        \li \l{Spectrum Example}{spectrum},
            \l{Audio Input Example}{audioinput}
        \li
        \li QAudioSource
    \row
        \li Recording encoded audio data
        \li \l{Audio Recorder Example}{audiorecorder}
        \li
        \li QAudioRecorder
    \row
        \li Discovering raw audio devices
        \li \l{Audio Devices Example}{audiodevices}
        \li
        \li QAudioDevice
    \row
        \li Video Playback
        \li \l{Media Player Example}{player},
            \l{QML Video Example}{qmlvideo},
            \l{QML Video Shader Effects Example}{qmlvideofx}
        \li \l MediaPlayer, \l VideoOutput, \l Video
        \li QMediaPlayer, QVideoWidget, QGraphicsVideoItem
    \row
        \li Video Processing
        \li \l {QML Video Example}{qmlvideofx}
        \li \l {MediaPlayer}, \l VideoOutput
        \li QMediaPlayer, QVideoFrame
    \row
        \li Accessing camera viewfinder
        \li \l {Camera Example}{camera},
            \l {QML Camera Example}{declarative-camera}
        \li \l Camera, \l VideoOutput
        \li QCamera, QVideoWidget, QGraphicsVideoItem
    \row
        \li Viewfinder processing
        \li
        \li \l Camera, \l VideoOutput
        \li QCamera, QVideoFrame
    \row
        \li Capturing photos
        \li \l {Camera Example}{camera},
            \l {QML Camera Example}{declarative-camera}
        \li \l Camera
        \li QCamera, QImageCapture
    \row
        \li Capturing movies
        \li \l {Camera Example}{camera},
            \l {QML Camera Example}{declarative-camera}
        \li \l Camera
        \li QCamera, QMediaRecorder
    \row
        \li 3D sound sources
        \li
        \li \l {AudioEngine Example}{Audio Engine}
        \li \l {AudioEngine}, \l Sound
        \li
\endtable

\section1 Limitations

The Qt Multimedia APIs build upon the multimedia framework of the underlying
platform. This can mean that support for various codecs, or containers will vary
between machines. This support depends on what the end user has installed.

\section1 Changes from Previous Versions

If you previously used Qt Multimedia in Qt 5, see
\l{Changes in Qt Multimedia} for more information on what has changed, and what
you might need to change when porting code to Qt 6.

\section1 Reference Documentation

\section2 QML Types
The QML types are accessed by using:
\code
import QtMultimedia
\endcode

\section2 Multimedia Classes

\annotatedlist multimedia

*/
